name: Python CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-22.04
    timeout-minutes: 10

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        volumes:
          - postgres_data:/var/lib/postgresql/data

    env:
      DATABASE_URL: postgresql://test_user:test_pass@localhost:5432/test_db
      FLASK_APP: app.py
      JWT_SECRET_KEY: ${ secrets.JWT_SECRET_KEY }

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Wait for PostgreSQL
      run: sleep 5

    - name: Run migrations
      run: |
        flask db upgrade

    - name: Run tests with pytest
      run: |
        pytest tests/ -v --cov=app --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: success()